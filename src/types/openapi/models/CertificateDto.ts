// tslint:disable
/**
 * CZERTAINLY Core API
 * REST API for CZERTAINLY Core
 *
 * The version of the OpenAPI document: 2.15.2-SNAPSHOT
 * Contact: info@czertainly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    CertificateState,
    CertificateType,
    CertificateValidationStatus,
    ComplianceStatus,
    GroupDto,
    SimplifiedRaProfileDto,
} from './';

/**
 * @export
 * @interface CertificateDto
 */
export interface CertificateDto {
    /**
     * UUID of the Certificate
     * @type {string}
     * @memberof CertificateDto
     */
    uuid: string;
    /**
     * Certificate common name
     * @type {string}
     * @memberof CertificateDto
     */
    commonName: string;
    /**
     * Certificate serial number
     * @type {string}
     * @memberof CertificateDto
     */
    serialNumber?: string;
    /**
     * Certificate issuer common name
     * @type {string}
     * @memberof CertificateDto
     */
    issuerCommonName?: string;
    /**
     * Issuer DN of the Certificate
     * @type {string}
     * @memberof CertificateDto
     */
    issuerDn?: string;
    /**
     * Subject DN of the Certificate
     * @type {string}
     * @memberof CertificateDto
     */
    subjectDn: string;
    /**
     * Certificate validity start date
     * @type {string}
     * @memberof CertificateDto
     */
    notBefore?: string;
    /**
     * Certificate expiration date
     * @type {string}
     * @memberof CertificateDto
     */
    notAfter?: string;
    /**
     * Public key algorithm
     * @type {string}
     * @memberof CertificateDto
     */
    publicKeyAlgorithm: string;
    /**
     * Alternative Public key algorithm
     * @type {string}
     * @memberof CertificateDto
     */
    altPublicKeyAlgorithm?: string;
    /**
     * Certificate signature algorithm
     * @type {string}
     * @memberof CertificateDto
     */
    signatureAlgorithm?: string;
    /**
     * Certificate alternative signature algorithm
     * @type {string}
     * @memberof CertificateDto
     */
    altSignatureAlgorithm?: string;
    /**
     * Indicator whether the certificate is hybrid
     * @type {boolean}
     * @memberof CertificateDto
     */
    hybridCertificate: boolean;
    /**
     * Certificate key size
     * @type {number}
     * @memberof CertificateDto
     */
    keySize: number;
    /**
     * Certificate key size of the alternative key
     * @type {number}
     * @memberof CertificateDto
     */
    altKeySize?: number;
    /**
     * State of the Certificate
     * @type {CertificateState}
     * @memberof CertificateDto
     */
    state: CertificateState;
    /**
     * Current validation status of the certificate
     * @type {CertificateValidationStatus}
     * @memberof CertificateDto
     */
    validationStatus: CertificateValidationStatus;
    /**
     * RA Profile associated to the Certificate
     * @type {SimplifiedRaProfileDto}
     * @memberof CertificateDto
     */
    raProfile?: SimplifiedRaProfileDto;
    /**
     * SHA256 fingerprint of the Certificate
     * @type {string}
     * @memberof CertificateDto
     */
    fingerprint?: string;
    /**
     * Groups associated to the Certificate
     * @type {Array<GroupDto>}
     * @memberof CertificateDto
     */
    groups?: Array<GroupDto>;
    /**
     * Certificate Owner
     * @type {string}
     * @memberof CertificateDto
     */
    owner?: string;
    /**
     * Certificate Owner UUID
     * @type {string}
     * @memberof CertificateDto
     */
    ownerUuid?: string;
    /**
     * Certificate type
     * @type {CertificateType}
     * @memberof CertificateDto
     */
    certificateType: CertificateType;
    /**
     * Serial number of the issuer
     * @type {string}
     * @memberof CertificateDto
     */
    issuerSerialNumber?: string;
    /**
     * Certificate compliance status
     * @type {ComplianceStatus}
     * @memberof CertificateDto
     */
    complianceStatus: ComplianceStatus;
    /**
     * UUID of the issuer certificate
     * @type {string}
     * @memberof CertificateDto
     */
    issuerCertificateUuid?: string;
    /**
     * Private Key Availability
     * @type {boolean}
     * @memberof CertificateDto
     */
    privateKeyAvailability: boolean;
    /**
     * Indicator whether CA is marked as trusted, set to null if certificate is not CA
     * @type {boolean}
     * @memberof CertificateDto
     */
    trustedCa?: boolean;
    /**
     * Certificate is archived
     * @type {boolean}
     * @memberof CertificateDto
     */
    archived?: boolean;
}


