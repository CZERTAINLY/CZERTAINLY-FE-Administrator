// tslint:disable
/**
 * CZERTAINLY Core API
 * REST API for CZERTAINLY Core
 *
 * The version of the OpenAPI document: 2.12.1-SNAPSHOT
 * Contact: info@czertainly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    AuthenticationServiceExceptionDto,
    ErrorMessageDto,
    NotificationSettingsDto,
    PlatformSettingsDto,
} from '../models';

export interface UpdateNotificationsSettingsRequest {
    notificationSettingsDto: NotificationSettingsDto;
}

export interface UpdatePlatformSettingsRequest {
    platformSettingsDto: PlatformSettingsDto;
}

/**
 * no description
 */
export class SettingsApi extends BaseAPI {

    /**
     * Get notification settings
     */
    getNotificationsSettings(): Observable<NotificationSettingsDto>
    getNotificationsSettings(opts?: OperationOpts): Observable<AjaxResponse<NotificationSettingsDto>>
    getNotificationsSettings(opts?: OperationOpts): Observable<NotificationSettingsDto | AjaxResponse<NotificationSettingsDto>> {
        return this.request<NotificationSettingsDto>({
            url: '/v1/settings/notifications',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Get platform settings
     */
    getPlatformSettings(): Observable<PlatformSettingsDto>
    getPlatformSettings(opts?: OperationOpts): Observable<AjaxResponse<PlatformSettingsDto>>
    getPlatformSettings(opts?: OperationOpts): Observable<PlatformSettingsDto | AjaxResponse<PlatformSettingsDto>> {
        return this.request<PlatformSettingsDto>({
            url: '/v1/settings/platform',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Update notifications setting
     */
    updateNotificationsSettings({ notificationSettingsDto }: UpdateNotificationsSettingsRequest): Observable<void>
    updateNotificationsSettings({ notificationSettingsDto }: UpdateNotificationsSettingsRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    updateNotificationsSettings({ notificationSettingsDto }: UpdateNotificationsSettingsRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(notificationSettingsDto, 'notificationSettingsDto', 'updateNotificationsSettings');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/v1/settings/notifications',
            method: 'PUT',
            headers,
            body: notificationSettingsDto,
        }, opts?.responseOpts);
    };

    /**
     * Update platform setting
     */
    updatePlatformSettings({ platformSettingsDto }: UpdatePlatformSettingsRequest): Observable<void>
    updatePlatformSettings({ platformSettingsDto }: UpdatePlatformSettingsRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    updatePlatformSettings({ platformSettingsDto }: UpdatePlatformSettingsRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(platformSettingsDto, 'platformSettingsDto', 'updatePlatformSettings');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<void>({
            url: '/v1/settings/platform',
            method: 'PUT',
            headers,
            body: platformSettingsDto,
        }, opts?.responseOpts);
    };

}
