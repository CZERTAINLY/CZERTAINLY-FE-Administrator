// tslint:disable
/**
 * CZERTAINLY Core API
 * REST API for CZERTAINLY Core
 *
 * The version of the OpenAPI document: 2.14.2-SNAPSHOT
 * Contact: info@czertainly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    ApprovalProfileDetailDto,
    ApprovalProfileRequestDto,
    ApprovalProfileResponseDto,
    ApprovalProfileUpdateRequestDto,
    AuthenticationServiceExceptionDto,
    ErrorMessageDto,
    UuidDto,
} from '../models';

export interface CreateApprovalProfileRequest {
    approvalProfileRequestDto: ApprovalProfileRequestDto;
}

export interface DeleteApprovalProfileRequest {
    uuid: string;
}

export interface EditApprovalProfileRequest {
    uuid: string;
    approvalProfileUpdateRequestDto: ApprovalProfileUpdateRequestDto;
}

export interface GetApprovalProfileRequest {
    uuid: string;
    version?: number;
}

export interface ListApprovalProfilesRequest {
    itemsPerPage?: number;
    pageNumber?: number;
}

/**
 * no description
 */
export class ApprovalProfileInventoryApi extends BaseAPI {

    /**
     * Create a Approval profile
     */
    createApprovalProfile({ approvalProfileRequestDto }: CreateApprovalProfileRequest): Observable<UuidDto>
    createApprovalProfile({ approvalProfileRequestDto }: CreateApprovalProfileRequest, opts?: OperationOpts): Observable<AjaxResponse<UuidDto>>
    createApprovalProfile({ approvalProfileRequestDto }: CreateApprovalProfileRequest, opts?: OperationOpts): Observable<UuidDto | AjaxResponse<UuidDto>> {
        throwIfNullOrUndefined(approvalProfileRequestDto, 'approvalProfileRequestDto', 'createApprovalProfile');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<UuidDto>({
            url: '/v1/approvalProfiles',
            method: 'POST',
            headers,
            body: approvalProfileRequestDto,
        }, opts?.responseOpts);
    };

    /**
     * Delete an approval profile
     */
    deleteApprovalProfile({ uuid }: DeleteApprovalProfileRequest): Observable<void>
    deleteApprovalProfile({ uuid }: DeleteApprovalProfileRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>>
    deleteApprovalProfile({ uuid }: DeleteApprovalProfileRequest, opts?: OperationOpts): Observable<void | AjaxResponse<void>> {
        throwIfNullOrUndefined(uuid, 'uuid', 'deleteApprovalProfile');

        return this.request<void>({
            url: '/v1/approvalProfiles/{uuid}'.replace('{uuid}', encodeURI(uuid)),
            method: 'DELETE',
        }, opts?.responseOpts);
    };

    /**
     * Edit an Approval profile
     */
    editApprovalProfile({ uuid, approvalProfileUpdateRequestDto }: EditApprovalProfileRequest): Observable<object>
    editApprovalProfile({ uuid, approvalProfileUpdateRequestDto }: EditApprovalProfileRequest, opts?: OperationOpts): Observable<AjaxResponse<object>>
    editApprovalProfile({ uuid, approvalProfileUpdateRequestDto }: EditApprovalProfileRequest, opts?: OperationOpts): Observable<object | AjaxResponse<object>> {
        throwIfNullOrUndefined(uuid, 'uuid', 'editApprovalProfile');
        throwIfNullOrUndefined(approvalProfileUpdateRequestDto, 'approvalProfileUpdateRequestDto', 'editApprovalProfile');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<object>({
            url: '/v1/approvalProfiles/{uuid}'.replace('{uuid}', encodeURI(uuid)),
            method: 'PUT',
            headers,
            body: approvalProfileUpdateRequestDto,
        }, opts?.responseOpts);
    };

    /**
     * Get Approval Profile Details
     */
    getApprovalProfile({ uuid, version }: GetApprovalProfileRequest): Observable<ApprovalProfileDetailDto>
    getApprovalProfile({ uuid, version }: GetApprovalProfileRequest, opts?: OperationOpts): Observable<AjaxResponse<ApprovalProfileDetailDto>>
    getApprovalProfile({ uuid, version }: GetApprovalProfileRequest, opts?: OperationOpts): Observable<ApprovalProfileDetailDto | AjaxResponse<ApprovalProfileDetailDto>> {
        throwIfNullOrUndefined(uuid, 'uuid', 'getApprovalProfile');

        const query: HttpQuery = {};

        if (version != null) { query['version'] = version; }

        return this.request<ApprovalProfileDetailDto>({
            url: '/v1/approvalProfiles/{uuid}'.replace('{uuid}', encodeURI(uuid)),
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

    /**
     * List Approval Profiles
     */
    listApprovalProfiles({ itemsPerPage, pageNumber }: ListApprovalProfilesRequest): Observable<ApprovalProfileResponseDto>
    listApprovalProfiles({ itemsPerPage, pageNumber }: ListApprovalProfilesRequest, opts?: OperationOpts): Observable<AjaxResponse<ApprovalProfileResponseDto>>
    listApprovalProfiles({ itemsPerPage, pageNumber }: ListApprovalProfilesRequest, opts?: OperationOpts): Observable<ApprovalProfileResponseDto | AjaxResponse<ApprovalProfileResponseDto>> {

        const query: HttpQuery = {};

        if (itemsPerPage != null) { query['itemsPerPage'] = itemsPerPage; }
        if (pageNumber != null) { query['pageNumber'] = pageNumber; }

        return this.request<ApprovalProfileResponseDto>({
            url: '/v1/approvalProfiles',
            method: 'GET',
            query,
        }, opts?.responseOpts);
    };

}
