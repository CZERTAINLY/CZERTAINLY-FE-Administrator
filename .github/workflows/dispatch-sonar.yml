name: Dispatch Sonar
on:
  workflow_run:
    workflows: [ "Check PR" ]
    types: [ completed ]

permissions:
  actions: write # download artifact + create workflow dispatch
  contents: read

jobs:
  dispatch:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Download PR context artifact from upstream run
        uses: actions/download-artifact@v4
        with:
          name: pr-context
          path: pr_context
          repository: ${{ github.repository }}
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract inputs
        id: ctx
        run: |
          cat pr_context/pr-context.json
          echo "pr_number=$(jq -r '.pr_number' pr_context/pr-context.json)" >> $GITHUB_OUTPUT
          echo "head_sha=$(jq -r '.head_sha' pr_context/pr-context.json)" >> $GITHUB_OUTPUT
          echo "head_repo=$(jq -r '.head_repo' pr_context/pr-context.json)" >> $GITHUB_OUTPUT
          echo "head_branch=$(jq -r '.head_branch' pr_context/pr-context.json)" >> $GITHUB_OUTPUT
          echo "base_ref=$(jq -r '.base_ref' pr_context/pr-context.json)" >> $GITHUB_OUTPUT

      - name: Dispatch Sonar workflow with inputs
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'sonar.yml',
              ref: '${{ steps.ctx.outputs.base_ref }}',
              inputs: {
                pr_number:  '${{ steps.ctx.outputs.pr_number }}',
                head_sha:   '${{ steps.ctx.outputs.head_sha }}',
                head_repo:  '${{ steps.ctx.outputs.head_repo }}',
                head_branch:'${{ steps.ctx.outputs.head_branch }}',
                base_ref:   '${{ steps.ctx.outputs.base_ref }}'
              }
            });
